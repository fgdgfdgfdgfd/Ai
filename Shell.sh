#!/bin/bash

# üöÄ –ü–û–õ–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê OLLAMA + DOCKER + OPEN WEBUI (32GB –¥–∏—Å–∫)

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

echo -e "${PURPLE}üöÄ –ü–û–õ–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê: Ollama + Docker + Open WebUI${NC}"
echo -e "${PURPLE}====================================================${NC}"
echo "üìÖ $(date)"
echo ""

# ===============================================
# 1. –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´
# ===============================================

log "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º—É..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
available=$(df / | awk 'NR==2 {print $4}')
available_gb=$((available / 1024 / 1024))
if [ $available_gb -lt 12 ]; then
    error "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞! –î–æ—Å—Ç—É–ø–Ω–æ: ${available_gb}GB, –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 12GB"
    exit 1
fi
log "‚úÖ –ú–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: ${available_gb}GB - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
ARCH=$(uname -m)
log "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"

# ===============================================
# 2. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
# ===============================================

log "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
sudo apt update -qq
sudo apt install -y curl wget apt-transport-https ca-certificates gnupg lsb-release software-properties-common

# ===============================================
# 3. –£–°–¢–ê–ù–û–í–ö–ê DOCKER (–µ—Å–ª–∏ –Ω–µ—Ç)
# ===============================================

log "üê≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker..."

if ! command -v docker &> /dev/null; then
    log "üì¶ Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏
    sudo apt remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    rm get-docker.sh
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    
    # –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º newgrp, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —Å–æ–∑–¥–∞–µ—Ç subshell
    log "‚ö†Ô∏è –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ docker –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    
    log "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    warn "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    docker --version
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç
if sudo systemctl is-active --quiet docker; then
    log "‚úÖ Docker —Å–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω"
else
    sudo systemctl start docker
    sudo systemctl enable docker
    log "‚úÖ Docker —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã Docker
log "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º Docker..."
if sudo docker run --rm hello-world > /dev/null 2>&1; then
    log "‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    error "‚ùå Docker –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    exit 1
fi

# ===============================================
# 4. –£–°–¢–ê–ù–û–í–ö–ê DOCKER COMPOSE
# ===============================================

log "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose..."

if ! docker compose version > /dev/null 2>&1; then
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose Plugin..."
    sudo apt update
    sudo apt install -y docker-compose-plugin
fi

log "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
docker compose version 2>/dev/null || true

# ===============================================
# 5. –£–°–¢–ê–ù–û–í–ö–ê OLLAMA (–≤—Å–µ–≥–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤–µ–∂—É—é –≤–µ—Ä—Å–∏—é)
# ===============================================

log "ü¶ô –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Ollama..."

# –í—Å–µ–≥–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º Ollama
log "üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é Ollama..."
curl -fsSL https://ollama.com/install.sh | sh

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Ollama
if command -v ollama &> /dev/null; then
    log "‚úÖ Ollama —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
else
    error "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Ollama"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ Ollama —Å–µ—Ä–≤–µ—Ä–∞
log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Ollama —Å–µ—Ä–≤–µ—Ä..."

# –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
sudo pkill -f "ollama serve" 2>/dev/null || true
sleep 3

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Ollama
log "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Ollama..."
sudo tee /etc/systemd/system/ollama.service > /dev/null <<EOF
[Unit]
Description=Ollama Service
After=network-online.target
Wants=network-online.target

[Service]
Type=simple
User=$USER
Group=$USER
ExecStart=/usr/local/bin/ollama serve
Environment="HOME=$HOME"
Environment="PATH=/usr/local/bin:/usr/bin:/bin"
Environment="OLLAMA_HOST=0.0.0.0:11434"
Restart=always
RestartSec=10
StandardOutput=journal
StandardError=journal
KillMode=mixed
KillSignal=SIGTERM

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable ollama.service
sudo systemctl start ollama.service

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Ollama
log "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Ollama API..."
for i in {1..60}; do
    if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
        log "‚úÖ Ollama API –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç"
        break
    fi
    if [ $i -eq 60 ]; then
        error "‚ùå Ollama API –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 60 —Å–µ–∫—É–Ω–¥"
        sudo systemctl status ollama.service --no-pager
        exit 1
    fi
    echo -n "."
    sleep 1
done
echo ""

# ===============================================
# 6. –ó–ê–ì–†–£–ó–ö–ê –ú–û–î–ï–õ–ï–ô
# ===============================================

log "üß† –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏..."

# –ú–∞—Å—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –¥–ª—è 32GB –¥–∏—Å–∫–∞
MODELS=(
    "qwen2:0.5b"           # 352MB - —Å–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä–∞—è
    "llama3.2:1b"          # 1.3GB - –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –º–∞–ª–∞—è
    "deepseek-coder:1.3b"  # 1.3GB - –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
    "phi3:mini"            # 2.3GB - Microsoft –º–∞–ª–∞—è
)

total=${#MODELS[@]}
current=0

for model in "${MODELS[@]}"; do
    current=$((current + 1))
    log "üì• [$current/$total] –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å: $model"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –º–µ—Å—Ç–æ
    available=$(df / | awk 'NR==2 {print $4}')
    available_gb=$((available / 1024 / 1024))
    if [ $available_gb -lt 3 ]; then
        warn "‚ùå –ú–∞–ª–æ –º–µ—Å—Ç–∞ –¥–ª—è $model (–æ—Å—Ç–∞–ª–æ—Å—å ${available_gb}GB), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        continue
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ
    model_name="${model%%:*}"
    if ollama list 2>/dev/null | grep -q "^$model_name"; then
        warn "‚ö†Ô∏è –ú–æ–¥–µ–ª—å $model —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        continue
    fi
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å —Å —Ç–∞–π–º–∞—É—Ç–æ–º –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º stderr
    if timeout 1200 ollama pull "$model" 2>&1; then
        log "‚úÖ –ú–æ–¥–µ–ª—å $model —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    else
        error "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ $model (—Ç–∞–π–º–∞—É—Ç –∏–ª–∏ —Å–µ—Ç—å)"
        continue
    fi
    
    info "üìä –ü—Ä–æ–≥—Ä–µ—Å—Å: $current/$total –º–æ–¥–µ–ª–µ–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
    sleep 2
done

log "üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"

# ===============================================
# 7. –£–°–¢–ê–ù–û–í–ö–ê OPEN WEBUI
# ===============================================

log "üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Open WebUI..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
log "üîÑ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Open WebUI..."
sudo docker stop open-webui 2>/dev/null || true
sudo docker rm open-webui 2>/dev/null || true
sudo docker stop ollama-webui 2>/dev/null || true
sudo docker rm ollama-webui 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º —Ç–æ–º –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
log "üìÅ –°–æ–∑–¥–∞–µ–º —Ç–æ–º –¥–ª—è –¥–∞–Ω–Ω—ã—Ö WebUI..."
sudo docker volume create open-webui 2>/dev/null || true

# –ó–∞–ø—É—Å–∫–∞–µ–º Open WebUI
log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Open WebUI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
WEBUI_SECRET_KEY=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-32)

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å --init –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
sudo docker run -d \
    --name open-webui \
    --restart unless-stopped \
    --init \
    -p 3000:8080 \
    --add-host=host.docker.internal:host-gateway \
    -v open-webui:/app/backend/data \
    -e OLLAMA_BASE_URL=http://host.docker.internal:11434 \
    -e WEBUI_SECRET_KEY="$WEBUI_SECRET_KEY" \
    -e DEFAULT_USER_ROLE=admin \
    ghcr.io/open-webui/open-webui:main

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ WebUI
log "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Open WebUI..."
for i in {1..60}; do
    if curl -s http://localhost:3000 >/dev/null 2>&1; then
        log "‚úÖ Open WebUI –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω"
        break
    fi
    if [ $i -eq 60 ]; then
        error "‚ùå Open WebUI –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 60 —Å–µ–∫—É–Ω–¥"
        sudo docker logs open-webui --tail 50
        exit 1
    fi
    echo -n "."
    sleep 2
done
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if sudo docker ps | grep -q "open-webui"; then
    log "‚úÖ Open WebUI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "‚ùå Open WebUI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    sudo docker logs open-webui --tail 50
    exit 1
fi

# ===============================================
# 8. –°–û–ó–î–ê–ù–ò–ï –°–ö–†–ò–ü–¢–û–í –£–ü–†–ê–í–õ–ï–ù–ò–Ø
# ===============================================

log "üìã –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
cat > "$HOME/monitor.sh" << 'MONITOR_EOF'
#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

while true; do
    clear
    echo -e "${BLUE}üöÄ OLLAMA + OPEN WEBUI MONITOR${NC}"
    echo "======================================"
    echo "‚è∞ $(date)"
    echo ""
    
    echo -e "${YELLOW}üìä –°–ò–°–¢–ï–ú–ê:${NC}"
    CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}' 2>/dev/null || echo "N/A")
    echo "CPU: ${CPU_USAGE}%"
    echo "RAM: $(free -h | awk '/^Mem:/ {print $3 "/" $2}')"
    echo "–î–ò–°–ö: $(df -h / | awk '/\// {print $3 "/" $2 " (" $5 ")"}')"
    echo ""
    
    echo -e "${YELLOW}üîß –°–ï–†–í–ò–°–´:${NC}"
    if systemctl is-active --quiet ollama 2>/dev/null; then
        echo -e "Ollama: ${GREEN}‚úÖ –†–ê–ë–û–¢–ê–ï–¢${NC}"
    else
        echo -e "Ollama: ${RED}‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
    
    if docker ps --format "{{.Names}}" 2>/dev/null | grep -q "^open-webui$"; then
        echo -e "Open WebUI: ${GREEN}‚úÖ –†–ê–ë–û–¢–ê–ï–¢${NC}"
    else
        echo -e "Open WebUI: ${RED}‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
    
    if systemctl is-active --quiet docker 2>/dev/null; then
        echo -e "Docker: ${GREEN}‚úÖ –†–ê–ë–û–¢–ê–ï–¢${NC}"
    else
        echo -e "Docker: ${RED}‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
    echo ""
    
    echo -e "${YELLOW}üß† –ú–û–î–ï–õ–ò:${NC}"
    if command -v ollama &> /dev/null; then
        MODEL_COUNT=$(ollama list 2>/dev/null | tail -n +2 | wc -l)
        echo "–ó–∞–≥—Ä—É–∂–µ–Ω–æ: $MODEL_COUNT –º–æ–¥–µ–ª–µ–π"
        ollama list 2>/dev/null | tail -n +2 | awk '{print "  ‚Ä¢ " $1}' | head -5
    else
        echo "Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    fi
    echo ""
    
    echo -e "${YELLOW}üåê –î–û–°–¢–£–ü:${NC}"
    echo "Open WebUI: http://localhost:3000"
    echo "Ollama API: http://localhost:11434"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
    if curl -s http://localhost:3000 >/dev/null 2>&1; then
        echo -e "WebUI —Å—Ç–∞—Ç—É—Å: ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "WebUI —Å—Ç–∞—Ç—É—Å: ${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
        echo -e "API —Å—Ç–∞—Ç—É—Å: ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
    else
        echo -e "API —Å—Ç–∞—Ç—É—Å: ${RED}‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    fi
    
    echo ""
    echo -e "${YELLOW}‚öôÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï:${NC}"
    echo "Ctrl+C - –≤—ã—Ö–æ–¥ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "sudo systemctl restart ollama - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Ollama"
    echo "docker restart open-webui - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ WebUI"
    
    sleep 30
done
MONITOR_EOF

chmod +x "$HOME/monitor.sh"

# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞–º–∏
cat > "$HOME/manage.sh" << 'MANAGE_EOF'
#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

show_menu() {
    clear
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë        üöÄ OLLAMA + WEBUI MANAGER     ‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
    echo "1) üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "2) ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "3) ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "4) üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
    echo "5) üß† –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π"
    echo "6) ‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ–ª—å"
    echo "7) üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –º–æ–¥–µ–ª—å"
    echo "8) üìä –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "9) üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
    echo "0) ‚ùå –í—ã—Ö–æ–¥"
    echo ""
    echo -n "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é [0-9]: "
}

status_check() {
    echo -e "${BLUE}üìä –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´${NC}"
    echo "=================="
    
    if systemctl is-active --quiet ollama 2>/dev/null; then
        echo -e "Ollama: ${GREEN}‚úÖ –†–ê–ë–û–¢–ê–ï–¢${NC}"
    else
        echo -e "Ollama: ${RED}‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
    
    if docker ps 2>/dev/null | grep -q "open-webui"; then
        echo -e "WebUI: ${GREEN}‚úÖ –†–ê–ë–û–¢–ê–ï–¢${NC}"
    else
        echo -e "WebUI: ${RED}‚ùå –ù–ï –†–ê–ë–û–¢–ê–ï–¢${NC}"
    fi
    
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø:"
    echo "WebUI: http://localhost:3000"
    echo "API: http://localhost:11434"
    
    echo ""
    echo "üìä –†–µ—Å—É—Ä—Å—ã:"
    echo "RAM: $(free -h | awk '/^Mem:/ {print $3 "/" $2}')"
    echo "–î–∏—Å–∫: $(df -h / | awk '/\// {print $3 "/" $2 " (" $5 ")"}')"
}

start_services() {
    echo -e "${GREEN}‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    sudo systemctl start ollama 2>/dev/null
    sudo docker start open-webui 2>/dev/null
    echo "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
}

stop_services() {
    echo -e "${RED}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    sudo systemctl stop ollama 2>/dev/null
    sudo docker stop open-webui 2>/dev/null
    echo "–°–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

restart_services() {
    echo -e "${YELLOW}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    sudo systemctl restart ollama 2>/dev/null
    sudo docker restart open-webui 2>/dev/null
    sleep 10
    echo "–°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
}

while true; do
    show_menu
    read -r choice
    
    case $choice in
        1) status_check; read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."; ;;
        2) start_services; read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."; ;;
        3) stop_services; read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."; ;;
        4) restart_services; read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."; ;;
        5) ollama list 2>/dev/null || echo "Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"; read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."; ;;
        6)
            echo -n "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏: "
            read -r model_name
            if [ -n "$model_name" ]; then
                ollama pull "$model_name" 2>&1
            fi
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
        7)
            ollama list 2>/dev/null || echo "Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
            echo -n "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "
            read -r model_name
            if [ -n "$model_name" ]; then
                ollama rm "$model_name" 2>/dev/null || echo "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è"
            fi
            read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            ;;
        8) ~/monitor.sh ;;
        9)
            echo "–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–≥–∏:"
            echo "1) Ollama"
            echo "2) Open WebUI"
            read -r log_choice
            case $log_choice in
                1) sudo journalctl -u ollama.service -f ;;
                2) sudo docker logs -f open-webui 2>/dev/null || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω" ;;
            esac
            ;;
        0) echo "–í—ã—Ö–æ–¥..."; exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"; sleep 1 ;;
    esac
done
MANAGE_EOF

chmod +x "$HOME/manage.sh"

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
cat > "$HOME/update.sh" << 'UPDATE_EOF'
#!/bin/bash

echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."

# –û–±–Ω–æ–≤–ª—è–µ–º Ollama
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º Ollama..."
curl -fsSL https://ollama.com/install.sh | sh

# –û–±–Ω–æ–≤–ª—è–µ–º Open WebUI
echo "üåê –û–±–Ω–æ–≤–ª—è–µ–º Open WebUI..."
sudo docker pull ghcr.io/open-webui/open-webui:main
sudo docker stop open-webui 2>/dev/null
sudo docker rm open-webui 2>/dev/null

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á
WEBUI_SECRET_KEY=$(openssl rand -base64 32 | tr -d "=+/" | cut -c1-32)

sudo docker run -d \
    --name open-webui \
    --restart unless-stopped \
    --init \
    -p 3000:8080 \
    --add-host=host.docker.internal:host-gateway \
    -v open-webui:/app/backend/data \
    -e OLLAMA_BASE_URL=http://host.docker.internal:11434 \
    -e WEBUI_SECRET_KEY="$WEBUI_SECRET_KEY" \
    ghcr.io/open-webui/open-webui:main

echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
UPDATE_EOF

chmod +x "$HOME/update.sh"

# ===============================================
# 9. –ù–ê–°–¢–†–û–ô–ö–ê –ê–í–¢–û–ó–ê–ü–£–°–ö–ê
# ===============================================

log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
sudo tee /etc/systemd/system/open-webui.service > /dev/null <<EOF
[Unit]
Description=Open WebUI Container
Requires=docker.service
After=docker.service ollama.service
Wants=ollama.service

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/usr/bin/docker start open-webui
ExecStop=/usr/bin/docker stop open-webui
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable open-webui.service 2>/dev/null || true

# ===============================================
# 10. –§–ò–ù–ê–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò
# ===============================================

log "üîç –í—ã–ø–æ–ª–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama API
if curl -s http://localhost:11434/api/tags >/dev/null 2>&1; then
    log "‚úÖ Ollama API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    error "‚ùå Ollama API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Open WebUI
if curl -s http://localhost:3000 >/dev/null 2>&1; then
    log "‚úÖ Open WebUI –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    error "‚ùå Open WebUI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü–æ–∫–∞–∑ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
log "üìã –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
ollama list 2>/dev/null || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π"

# –ü–æ–∫–∞–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
log "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
echo "RAM: $(free -h | awk '/^Mem:/ {print $3 "/" $2}')"
echo "–î–∏—Å–∫: $(df -h / | awk '/\// {print $3 "/" $2 " (" $5 ")"}')"

# ===============================================
# 11. –ó–ê–í–ï–†–®–ï–ù–ò–ï
# ===============================================

echo ""
echo -e "${PURPLE}üéâ –£–°–¢–ê–ù–û–í–ö–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–í–ï–†–®–ï–ù–ê!${NC}"
echo -e "${PURPLE}=================================${NC}"
echo ""
echo -e "${GREEN}‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
echo -e "${GREEN}‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
echo -e "${GREEN}‚úÖ Open WebUI –∑–∞–ø—É—â–µ–Ω${NC}"
echo -e "${GREEN}‚úÖ –ú–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã${NC}"
echo -e "${GREEN}‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
echo -e "${GREEN}‚úÖ –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã${NC}"
echo ""
echo -e "${BLUE}üåê –î–û–°–¢–£–ü –ö –°–ï–†–í–ò–°–ê–ú:${NC}"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "üñ•Ô∏è  Open WebUI:    http://localhost:3000"
echo "üîó Ollama API:    http://localhost:11434"
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:    ~/monitor.sh"
echo "‚öôÔ∏è  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:    ~/manage.sh"
echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:    ~/update.sh"
echo ""
echo -e "${BLUE}üîß –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:${NC}"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "ollama run qwen2:0.5b              # –ó–∞–ø—É—Å–∫ —á–∞—Ç–∞ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
echo "ollama list                        # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π"
echo "sudo systemctl status ollama       # –°—Ç–∞—Ç—É—Å Ollama"
echo "docker logs open-webui             # –õ–æ–≥–∏ WebUI"
echo "./manage.sh                        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "./monitor.sh                       # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã"
echo ""
echo -e "${BLUE}üí° –ü–û–õ–ï–ó–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:${NC}"
echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
echo "‚Ä¢ –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ –≤ WebUI —Å–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
echo "‚Ä¢ –í—Å–µ –¥–∞–Ω–Ω—ã–µ WebUI —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ Docker volume 'open-webui'"
echo "‚Ä¢ –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ollama pull model_name"
echo "‚Ä¢ –õ–æ–≥–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤: journalctl -u ollama –∏ docker logs"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–∞–±–æ—Ç—É - –≤—Å–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo ""
log "üöÄ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ"

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo ""
echo -e "${YELLOW}üìä –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–°:${NC}"
sudo systemctl status ollama.service --no-pager -l 2>/dev/null || true
echo ""
sudo docker ps --filter name=open-webui 2>/dev/null || true

echo ""
log "üéØ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!" 
